# General
nthreads = 1 # Number of threads to use in multi-threaded functions

# Combining
missing_subint_tolerance = 1   # Fraction of subints that can be missing
                               # from a subband before removing the entire
                               # subband
expected_subint_length = 10.0
expected_subint_bw = 25.0
expected_nsubbands = 8
combine_maxspan = 3600 # Max number of seconds a combined archive can 
                       # span (psradd -g)
combine_maxgap = 300 # Maximum gap between archives before starting 
                     # a combined archive (psradd -G)

# Cleaning
hotbins_default_params = 'threshold=5,fscrunchfirst=False,onpulse='
surgical_default_params = 'cthresh=5,corder=1,cbp=None,cnp=4,sthresh=5,sorder=2;1,sbp=None,snp=2;4'
rcvrstd_default_params = 'badchans=none,badsubints=none,trimbw=0,trimfrac=0,trimnum=0'
rcvr_response_lims = None # A tuple containing the limits of the receiver's
                          # frequency response [i.e. (lofreq, hifreq)]
                          # Note that a value of None indicates a lack of
                          # information about the receivers response. In this
                          # case none of the observing band will be pruned.
nchan_to_trim = 0  # Number of channels to trim off the top 
                   # and bottom of each subband
frac_to_trim = 0   # Fraction of bandwidth to trim off the top 
                   # and bottom of each subband
clean_chanthresh = 5.0 # Threshold for masking an entire channel
clean_subintthresh = 5.0 # Threshold for masking an entire subint
clean_binthresh = 2.0 # Threshold for masking bins
badchans = [] # Bad channels that should be zero-weighted
badchan_intervals = [] # (Inclusive) intervals of bad channels that 
                       # should be zero-weighted
badfreqs = [] # Bad frequencies. Channels containing these frequencies
              # should be zero-weighted
badfreq_intervals = [] # (Inclusive) ranges of bad frequencies. Channels
                       # containing these frequencies should be zero-weighted
badsubints = [] # Bad subints that should be zero-weighted
badsubint_intervals = [] # (inclusive) intervals of bad subints that
                         # should be zero-weighted
clean_strategy = 'scrub' # A string that uniquely matches the name of one cleaning
                         # function. If 'None', no cleaning will be performed.

# Detrending data
subint_order = [2,1] # Order of polynomial to remove from subints
subint_breakpoints = [[],[]] # Breakpoints to use
subint_numpieces = [2,4] # Number of pieces to break subints into when detrending. A non-None value here
                     # will override 'subint_breakpoints'
chan_order = [1] # Order of polynomial to remove from chans
chan_breakpoints = [[]] # Breakpoints to use
chan_numpieces = [4] # Number of pieces to break chans into when detrending. A non-None value here
                     # will override 'chan_breakpoints'

# TOA generation
ntoa_freq = 1 # Number of TOAs to generate in the frequency direction
ntoa_time = 1 # Number of TOAs to generate in the time direction
toa_format = "tempo2" # Output format for TOAs
toa_method = "PGS" # Algorithm to measure TOAs
base_standards_dir = "/aux/pc20237a/plazar/timing/EPTA/standards"
analytic = False # If analytic standards (i.e. *.m files) should be used
flags = ["-i %(backend)s", "-r %(rcvr)s"] # Flags to add to each TOA line

# Diagnostics
funcs_to_plot = ['std', 'mean'] # Functions to use when making diagnostic plots
rmbaseline = True
dedisp = True
rmprof = True
centre_prof = True
logcolours = False
vmin = 0
vmax = 1
